-----------------------------------------------------------------------
venvs commands windows
----------------------------------------------------------------
python --version
pip install virtualenv
python -m venv venv
.\venv\Scripts\Activate
pip list
python.exe -m pip install --upgrade pip
cls

-----------------------------------------------------------------------
pip install commands
----------------------------------------------------------------
pip install django
pip install djangorestframework
pip install ipython (Mejora la dinámica de la Shell con autocompletado)
pip install Pillow (Para usar el ImageField, para usar fotos)
pip install crispy-tailwind (Decorar Formularios)
pip install psycopg2 (Para manejar la conexión con postgreSQL)
pip install django-cors-headers (Coordina quien puede conectarse al Backend)
pip install coreapi (Documentación automática de la API)
cls

-----------------------------------------------------------------------
django commands
----------------------------------------------------------------
django-admin --version
django-admin --help
django-admin startproject _Project_TodoList .
python manage.py makemigrations
python manage.py migrate
python manage.py createsuperuser
python -m django startapp app_tasks
python -m django startapp app_users
python -m django startapp app_inicio
python manage.py makemigrations
python manage.py migrate
python manage.py collectstatic
python manage.py runserver
python manage.py runserver 0.0.0.0:8000 (Para acceder desde la red local)

-----------------------------------------------------------------------
requirements commands
----------------------------------------------------------------
pip freeze
pip list --format=freeze > requirements-dev.txt
pip list --not-required > requirements-dev.txt
pip list --not-required --format=freeze > requirements-dev.txt
Copiar las librerias necesarias a requirements.txt (sin dependencias)
pip install -r requirements.txt
cls

-----------------------------------------------------------------------
Docker commands
----------------------------------------------------------------
# Verificar la versión de Docker instalada
docker --version

# Crear la imagen llamada "proyectotodo" usando el Dockerfile actual
# El punto (.) indica que el Dockerfile está en el directorio actual.
sudo docker build -t proyectotodo .

# Listar los contenedores activos para verificar el nombre correspondiente
docker ps

# Ejecutar el contenedor mapeando el puerto 8000 del contenedor al puerto 700 del host
docker run -d -p 8000:8000 --name proyectotodo proyectotodo

# Acceder al contenedor en ejecución usando el nombre o ID del contenedor
docker exec -it proyectotodo /bin/bash

# Crear un superusuario para la aplicación de Django dentro del contenedor
python manage.py createsuperuser

# Salir del bash
exit

# Detier el contenedor en ejecución de forma ordenada
docker stop proyectotodo
